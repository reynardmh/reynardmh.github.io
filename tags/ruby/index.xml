<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ruby on hilman.io</title>
    <link>https://www.hilman.io/tags/ruby/</link>
    <description>Recent content in ruby on hilman.io</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Reynard Hilman</copyright>
    <lastBuildDate>Sun, 31 Jan 2016 21:07:34 -0500</lastBuildDate><atom:link href="https://www.hilman.io/tags/ruby/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Ruby Tempfile and Garbage Collection</title>
      <link>https://www.hilman.io/blog/2016/01/tempfile/</link>
      <pubDate>Sun, 31 Jan 2016 21:07:34 -0500</pubDate>
      
      <guid>https://www.hilman.io/blog/2016/01/tempfile/</guid>
      <description>&lt;p&gt;Tempfile gives you an easy way to quickly create a temporary file without having to worry about generating a file name that doesnâ€™t already exist and cleaning up the file after you are done. However, you have to be aware that the temporary file will be deleted when the tempfile instance is garbage collected.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>How to test file upload with Grape Framework</title>
      <link>https://www.hilman.io/blog/2016/01/how-to-test-file-upload-grape/</link>
      <pubDate>Thu, 28 Jan 2016 23:26:39 -0500</pubDate>
      
      <guid>https://www.hilman.io/blog/2016/01/how-to-test-file-upload-grape/</guid>
      <description>&lt;p&gt;&lt;!-- raw HTML omitted --&gt;Grape&lt;!-- raw HTML omitted --&gt; is a Rack based Ruby framework for building API.
It&amp;rsquo;s only a few years old and has not reached version 1.0 yet. The main github page has a very good documentation but
is still not as complete as Rails guide. In this post, I will discuss how to test file upload endpoint with RSpec.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Stop using backtick to run shell command in Ruby</title>
      <link>https://www.hilman.io/blog/2016/01/stop-using-backtick-to-run-shell-command-in-ruby/</link>
      <pubDate>Sat, 23 Jan 2016 13:56:39 -0500</pubDate>
      
      <guid>https://www.hilman.io/blog/2016/01/stop-using-backtick-to-run-shell-command-in-ruby/</guid>
      <description>&lt;p&gt;It&amp;rsquo;s all too common to find the use of backtick to run shell command from Ruby. It&amp;rsquo;s fine when you just run a command that doesn&amp;rsquo;t take any user input. But when you start passing input from untrusted source, that&amp;rsquo;s when the trouble begins.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Comparing ancestry and closure_tree for your nested data structure</title>
      <link>https://www.hilman.io/blog/2015/09/comparing-ancestry-and-closure_tree/</link>
      <pubDate>Sun, 13 Sep 2015 23:41:00 -0400</pubDate>
      
      <guid>https://www.hilman.io/blog/2015/09/comparing-ancestry-and-closure_tree/</guid>
      <description>&lt;p&gt;When it comes to implementing &lt;!-- raw HTML omitted --&gt;ActiveRecord nesting&lt;!-- raw HTML omitted --&gt;, there are a few popular implementations. In this post I will look closer at how &lt;!-- raw HTML omitted --&gt;Ancestry&lt;!-- raw HTML omitted --&gt; and &lt;!-- raw HTML omitted --&gt;Closure tree&lt;!-- raw HTML omitted --&gt; work and what the pros and cons are.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
